server {
    listen 80;
    location / {
        proxy_pass http://backend:8080;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /ws {
        proxy_pass http://backend:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    location /api/alert {
        proxy_pass http://backend:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_read_timeout 3600;  # 1시간
        proxy_send_timeout 3600;  # 1시간
    }

}
# 여기는 클라이언트 요청을 백엔드 서버로 전달하는 역할을 함
# - proxy_pass http://backend:8080;
#   : 요청을 http://backend:8080 서버로 전달

# - proxy_set_header X-Real-IP $remote_addr;
#   : 헤더에 X-Real-IP라는 헤더를 추가하고, 클라이언트의 실제 IP 주소를 포함

# - proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#   : 헤더의 X-Forwarded-For속성에 클라이언트의 IP 주소를 추가함

# - proxy_set_header X-Forwarded-Proto $scheme;
#   : 헤더의 X-Forwarded-Proto속성에 클라이언트의 원래 요청이 어떤 프로토콜 (http 또는 https)

